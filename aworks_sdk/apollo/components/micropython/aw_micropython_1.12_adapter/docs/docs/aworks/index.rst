快速入门
=======================================

特性
----

* MicroPython 是 Python 3语言的精简高效实现 ，包括 Python 标准库的一小部分，经过优化可在微控制器和受限环境中运行。

* MicroPython 可以运行在有一定资源的开发板上，给你一个低层次的 Python 操作系统，可以用来控制各种电子系统。

* MicroPython 包含了诸如交互式提示，任意精度整数，闭包，列表解析，生成器，异常处理等高级功能。

* MicroPython 的目标是尽可能与普通 Python 兼容，使开发者能够轻松地将代码从桌面端转移到微控制器或嵌入式系统。程序可移植性很强，因为不需要考虑底层驱动，所以程序移植变得轻松和容易。

AWorks-MiroPython是针对Micropython的移植，与Micropython特征一致。

优势
----
* Python 是一款容易上手的脚本语言，同时具有强大的功能，语法优雅简单。使用 MicroPython 编程可以降低嵌入式的开发门槛，让更多的人体验嵌入式编程的乐趣。
  
* 通过 MicroPython 实现硬件底层的访问和控制，不需要了解底层寄存器、数据手册、厂家的库函数等，即可轻松控制硬件。

* 外设与常用功能都有相应的模块，降低了开发难度，使开发和移植变得容易和快速。
 
应用领域
--------

MicroPython 在嵌入式系统上完整实现了 Python3 的核心功能，可以在产品开发的各个阶段给开发者带来便利。通过 MicroPython 提供的库和函数，开发者可以快速控制 LED、液晶、舵机、多种传感器、SD、UART、I2C 等，实现各种功能，而不用再去研究底层硬件模块的使用方法，翻看寄存器手册。这样不但降低了开发难度，而且减少了重复开发工作，可以加快开发速度，提高开发效率。以前需要较高水平的嵌入式工程师花费数天甚至数周才能完成的功能，现在普通的嵌入式开发者用几个小时就能实现类似的功能。目前micropython主要应用领域有产品原型验证、硬件测试、教育、创客DIY等等。随着半导体技术的不断发展，芯片的功能、内部的存储器容量和资源不断增加，成本不断降低，可以使用 MicroPython 来进行开发设计的应用领域也会越来越多。

快速上手
--------

AWorks-MicroPython提供了四种执行python代码的方法，除常用的 `REPL` 之外，支持在Shell界面执行一个python文件和在c代码中解析一个python脚本。

.. toctree::
   :maxdepth: 1

   start.rst

